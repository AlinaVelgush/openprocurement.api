stages:
  - build
  - deploy
  - robot_tests
  - test

variables:
  COUCHDB_USER: op
  COUCHDB_PASSWORD: op
  GIT_STRATEGY: none

Build:
  stage: build
  script:
    - type multiwerf && source <(multiwerf use 1.0 beta)
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - unset WERF_TAG_GIT_BRANCH
    - werf build-and-publish --stages-storage :local --tag-custom ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  only:
    - branches
  tags:
    - shell
  except:
    - schedules
  variables:
    GIT_STRATEGY: fetch


.base_deploy: &base_deploy
  stage: deploy
  script:
    - helm repo add prozorro $REPO_URL
    - helm upgrade $CI_COMMIT_REF_SLUG --install prozorro/$HELM_CHART --namespace $HELM_NAMESPACE --set $HELM_TAG_PARAMETER=ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA --wait
  dependencies:
    - Build
  tags:
    - shell

Review:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
    on_stop: Stop review
  dependencies:
    - Build
  only:
    - branches
  except:
    - master
    - schedules

Deploy master:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
  dependencies:
    - Build
  only:
    - master
  except:
    - schedules

Run robot tests:
  stage: robot_tests
  script:
    - curl "$JENKINS_URL/buildWithParameters?token=$JENKINS_TOKEN&cause=$CI_COMMIT_REF_SLUG&RELEASE_NAME=$CI_COMMIT_REF_SLUG&API_VERSION=2.5"
    - echo $JENKINS_URL
  tags:
    - shell
  only:
    - branches
  dependencies:
    - Review
  except:
    - schedules
  when: manual

Stop review:
  stage: deploy
  script:
    - helm delete $CI_COMMIT_REF_SLUG --purge
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - shell
  only:
    - branches
  except:
    - master
    - schedules
  when: manual

.test:
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  stage: test
  services:
    - couchdb:1.6
  tags:
    - kube
  only:
    - branches
  dependencies:
    - Build
  script:
    - echo '127.0.0.1  couchdb' >> /etc/hosts
    - cd /app
    - py.test $TESTS $COV -v --maxfail=1 --color=yes
      --dist=each 
      --tx=popen//id=sand1//pool=sand//env:DB_NAME=test_sandbox_1//env:SANDBOX_MODE=1
      --tx=popen//id=sand2//pool=sand//env:DB_NAME=test_sandbox_2//env:SANDBOX_MODE=1
      --tx=popen//id=prod1//pool=prod//env:DB_NAME=test_prod_1//env:SANDBOX_MODE=
      --tx=popen//id=prod2//pool=prod//env:DB_NAME=test_prod_2//env:SANDBOX_MODE=
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'

test_tender_comp_stage1:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/competitivedialogue/tests/stage1
    COV: "--cov=src/openprocurement/competitivedialogue/views/stage1
          --cov=src/openprocurement/competitivedialogue/views/stage1/adapters.py
          --cov=src/openprocurement/competitivedialogue/views/stage1/constants.py
          --cov=src/openprocurement/competitivedialogue/views/stage1/includeme.py
          --cov=src/openprocurement/competitivedialogue/views/stage1/models.py
          --cov=src/openprocurement/competitivedialogue/views/stage1/subscribers.py
          --cov=src/openprocurement/competitivedialogue/views/stage1/utils.py
          --cov=src/openprocurement/competitivedialogue/views/stage1/validation.py"

test_tender_comp_stage2:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/competitivedialogue/tests/stage2
    COV: "--cov=src/openprocurement/competitivedialogue/views/stage2
          --cov=src/openprocurement/competitivedialogue/views/stage2/adapters.py
          --cov=src/openprocurement/competitivedialogue/views/stage2/constants.py
          --cov=src/openprocurement/competitivedialogue/views/stage2/includeme.py
          --cov=src/openprocurement/competitivedialogue/views/stage2/models.py
          --cov=src/openprocurement/competitivedialogue/views/stage2/subscribers.py
          --cov=src/openprocurement/competitivedialogue/views/stage2/utils.py
          --cov=src/openprocurement/competitivedialogue/views/stage2/validation.py"

test_tender_esco:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/esco/tests
    COV: "--cov=src/openprocurement/tender/esco/tests"

test_tender_cfaua:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/cfaua/tests
    COV: "--cov=src/openprocurement/tender/cfaua/tests"

test_tender_limited:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/limited/tests
    COV: "--cov=src/openprocurement/tender/limited/tests"

test_api:
  extends: .test
  variables:
    TESTS: src/openprocurement/api/tests
    COV: "--cov=src/openprocurement/api/tests"

test_tender_openeu:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/openeu/tests
    COV: "--cov=src/openprocurement/ender/openeu/tests"

test_tender_openua:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/openua/tests
    COV: "--cov=src/openprocurement/tender/openua/tests"

test_agreement_core:
  extends: .test
  variables:
    TESTS: src/openprocurement/agreement/core/tests
    COV: "--cov=src/openprocurement/agreement/core/tests"

test_contracting:
  extends: .test
  variables:
    TESTS: src/openprocurement/contracting/api/tests
    COV: "--cov=src/openprocurement/contracting/api/tests"

test_planning:
  extends: .test
  variables:
    TESTS: src/openprocurement/planning/api/tests
    COV: "--cov=src/openprocurement/planning/api/tests"

test_historical_core:
  extends: .test
  variables:
    TESTS: src/openprocurement/historical/core/tests
    COV: "--cov=src/openprocurement/historical/core/tests"

test_historical_tender:
  extends: .test
  variables:
    TESTS: src/openprocurement/historical/tender/tests
    COV: "--cov=src/openprocurement/historical/tender/tests"

test_agreement_cfaua:
  extends: .test
  variables:
    TESTS: src/openprocurement/agreement/cfaua/tests
    COV: "--cov=src/openprocurement/agreement/cfaua/tests"

test_tender_belowthreshold:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/belowthreshold/tests
    COV: "--cov=src/openprocurement/tender/belowthreshold/tests"

test_tender_core:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/core/tests
    COV: "--cov=src/openprocurement/tender/core/tests"

test_tender_openuadefense:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/openuadefense/tests
    COV: "--cov=src/openprocurement/tender/openuadefense/tests"

test_tender_cfaselectionua:
  extends: .test
  variables:
    TESTS: src/openprocurement/tender/cfaselectionua/tests
    COV: "--cov=src/openprocurement/tender/cfaselectionua/tests"
