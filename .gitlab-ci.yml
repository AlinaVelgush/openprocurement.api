stages:
  - build
  - deploy
  - robot_tests
  - test

variables:
  COUCHDB_USER: op
  COUCHDB_PASSWORD: op
  GIT_STRATEGY: none

Build:
  stage: build
  script:
    - type multiwerf && source <(multiwerf use 1.0 beta)
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - unset WERF_TAG_GIT_BRANCH
    - werf build-and-publish --stages-storage :local --tag-custom ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  only:
    - branches
  tags:
    - shell
  except:
    - schedules
  variables:
    GIT_STRATEGY: fetch


.base_deploy: &base_deploy
  stage: deploy
  script:
    - helm repo add prozorro $REPO_URL
    - helm upgrade $CI_COMMIT_REF_SLUG --install prozorro/$HELM_CHART --namespace $HELM_NAMESPACE --set $HELM_TAG_PARAMETER=ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA --wait
  dependencies:
    - Build
  tags:
    - shell

Review:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
    on_stop: Stop review
  dependencies:
    - Build
  only:
    - branches
  except:
    - master
    - schedules

Deploy master:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
  dependencies:
    - Build
  only:
    - master
  except:
    - schedules

Run robot tests:
  stage: robot_tests
  script:
    - curl "$JENKINS_URL/buildWithParameters?token=$JENKINS_TOKEN&cause=$CI_COMMIT_REF_SLUG&RELEASE_NAME=$CI_COMMIT_REF_SLUG&API_VERSION=2.5"
    - echo $JENKINS_URL
  tags:
    - shell
  only:
    - branches
  dependencies:
    - Review
  except:
    - schedules
  when: manual

Stop review:
  stage: deploy
  script:
    - helm delete $CI_COMMIT_REF_SLUG --purge
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - shell
  only:
    - branches
  except:
    - master
    - schedules
  when: manual

.test:
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  stage: test
  services:
    - couchdb:1.6
  tags:
    - kube
  only:
    - branches
  dependencies:
    - Build
  script:
    - echo '127.0.0.1  couchdb' >> /etc/hosts
    - cd /app
    - export MODULE_DIR=$(echo $MODULE | sed -e 's/[\ ]/\//g')
    - export MODULE_NAME=$(echo $MODULE | sed -e 's/[\ ]/\./g')
    - py.test src/openprocurement/$MODULE_DIR -v 
      --dist=each 
      --tx=popen//id=sand1//pool=sand//env:SANDBOX_MODE=1
      --tx=popen//id=sand2//pool=sand//env:SANDBOX_MODE=1
      --tx=popen//id=prod1//pool=prod//env:SANDBOX_MODE=
      --tx=popen//id=prod2//pool=prod//env:SANDBOX_MODE=
      --maxfail=1
      --cov=openprocurement.$MODULE_NAME
      --color=yes
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'

test_tender_competitivedialogue:
  extends: .test
  variables:
    MODULE: tender competitivedialogue

test_tender_esco:
  extends: .test
  variables:
    MODULE: tender esco

test_tender_cfaua:
  extends: .test
  variables:
    MODULE: tender cfaua

test_tender_limited:
  extends: .test
  variables:
    MODULE: tender limited

test_api:
  extends: .test
  variables:
    MODULE: api

test_tender_openeu:
  extends: .test
  variables:
    MODULE: tender openeu

test_tender_openua:
  extends: .test
  variables:
    MODULE: tender openua

test_agreement_core:
  extends: .test
  variables:
    MODULE: agreement core

test_contracting:
  extends: .test
  variables:
    MODULE: contracting

test_planning:
  extends: .test
  variables:
    MODULE: planning

test_historical:
  extends: .test
  variables:
    MODULE: historical

test_agreement_cfaua:
  extends: .test
  variables:
    MODULE: agreement cfaua

test_tender_belowthreshold:
  extends: .test
  variables:
    MODULE: tender belowthreshold

test_tender_core:
  extends: .test
  variables:
    MODULE: tender core

test_tender_openuadefense:
  extends: .test
  variables:
    MODULE: tender openuadefense

test_tender_cfaselectionua:
  extends: .test
  variables:
    MODULE: tender cfaselectionua
