stages:
  - build
  - deploy
  - robot_tests
  - test
  - cleanup

variables:
  COUCHDB_USER: op
  COUCHDB_PASSWORD: op
  GIT_STRATEGY: none

.werf:
  before_script:
    - type multiwerf && source <(multiwerf use 1.0 beta)
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)


.build:
  extends: .werf
  stage: build
  script:
    - werf build-and-publish
  except:
    - schedules
  tags:
    - shell
  variables:
    GIT_STRATEGY: fetch
    WERF_STAGES_STORAGE: ":local"

build:
  extends: .build
  only:
    - branches
  variables:
    WERF_TAG_GIT_COMMIT: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

build_master:
  extends: .build
  only:
    - master
  variables:
    WERF_TAG_GIT_BRANCH: $CI_COMMIT_REF_SLUG

build_tag:
  extends: .build
  only:
    - tags
  variables:
    WERF_TAG_GIT_TAG: $CI_COMMIT_TAG

cleanup:
  extends: .werf
  stage: cleanup
  script:
    - docker login -u $WERF_IMAGES_CLEANUP_USERNAME -p $WERF_IMAGES_CLEANUP_PASSWORD $WERF_IMAGES_REPO
    - werf cleanup
  only:
    - schedules
  tags:
    - shell
  variables:
    WERF_STAGES_STORAGE: ":local"

.base_deploy: &base_deploy
  stage: deploy
  script:
    - helm repo add prozorro $REPO_URL
    - helm repo update
    - helm upgrade $CI_COMMIT_REF_SLUG --install prozorro/$HELM_CHART --namespace $HELM_NAMESPACE --set $HELM_TAG_PARAMETER=$TAG --wait
  dependencies:
    - build
  tags:
    - shell
  variables:
    TAG: ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA

review:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: start
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
    on_stop: stop_review
  dependencies:
    - build
  only:
    - branches
  except:
    - master
    - schedules
  when: manual

deploy_master:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
  dependencies:
    - build
  only:
    - master
  except:
    - schedules

robot_tests:
  stage: robot_tests
  script:
    - curl "$JENKINS_URL/buildWithParameters?token=$JENKINS_TOKEN&cause=$CI_COMMIT_REF_SLUG&RELEASE_NAME=$CI_COMMIT_REF_SLUG&API_VERSION=2.5"
    - echo $JENKINS_URL
  tags:
    - shell
  only:
    - branches
  dependencies:
    - review
  except:
    - schedules
  when: manual

stop_review:
  stage: deploy
  script:
    - helm delete $CI_COMMIT_REF_SLUG --purge
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - shell
  only:
    - branches
  except:
    - master
    - schedules
  when: manual

.test:
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  stage: test
  services:
    - couchdb:1.6
  tags:
    - kube
  only:
    - branches
  except:
    - schedules
  dependencies:
    - build
  script:
    - echo '127.0.0.1  couchdb' >> /etc/hosts
    - cd /app
    - py.test $TESTS_PATH --cov=$COV_PATH --cov-config=$COV_FILE -v --maxfail=1 --color=yes --dist=each
      --tx=popen//id=sand//env:DB_NAME=test_sandbox//env:SANDBOX_MODE=1//env:SINGLE_APP=1
      --tx=popen//id=prod//env:DB_NAME=test_prod//env:SANDBOX_MODE=//env:SINGLE_APP=1
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'

test_relocation_api:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/relocation/api/tests
    COV_PATH: src/openprocurement/relocation/api
    COV_FILE: .coveragerc

test_tender_esco:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/esco/tests
    COV_PATH: src/openprocurement/tender/esco
    COV_FILE: .coveragerc

test_tender_openeu:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/openeu/tests
    COV_PATH: src/openprocurement/tender/openeu
    COV_FILE: .coveragerc

test_tender_cfaua:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/cfaua/tests
    COV_PATH: src/openprocurement/tender/cfaua
    COV_FILE: .coveragerc

test_tender_comp_stage2:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/competitivedialogue/tests/stage2
    COV_PATH: src/openprocurement/tender/competitivedialogue/
    COV_FILE: src/openprocurement/tender/competitivedialogue/tests/stage2/.coveragerc

test_tender_core:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/core/tests
    COV_PATH: src/openprocurement/tender/core
    COV_FILE: .coveragerc

test_api:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/api/tests
    COV_PATH: src/openprocurement/api
    COV_FILE: .coveragerc

test_agreement_core:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/agreement/core/tests
    COV_PATH: src/openprocurement/agreement/core
    COV_FILE: .coveragerc

test_agreement_cfaua:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/agreement/cfaua/tests
    COV_PATH: src/openprocurement/agreement/cfaua
    COV_FILE: .coveragerc

test_contracting_api:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/contracting/api/tests
    COV_PATH: src/openprocurement/contracting/api
    COV_FILE: .coveragerc

test_planning_api:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/planning/api/tests
    COV_PATH: src/openprocurement/planning/api
    COV_FILE: .coveragerc

test_historical_core:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/historical/core/tests
    COV_PATH: src/openprocurement/historical/core
    COV_FILE: .coveragerc

test_historical_tender:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/historical/tender/tests
    COV_PATH: src/openprocurement/historical/tender
    COV_FILE: .coveragerc

test_tender_comp_stage1:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/competitivedialogue/tests/stage1
    COV_PATH: src/openprocurement/tender/competitivedialogue/
    COV_FILE: src/openprocurement/tender/competitivedialogue/tests/stage1/.coveragerc

test_tender_limited:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/limited/tests
    COV_PATH: src/openprocurement/tender/limited
    COV_FILE: .coveragerc

test_tender_openua:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/openua/tests
    COV_PATH: src/openprocurement/tender/openua
    COV_FILE: .coveragerc

test_tender_belowthreshold:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/belowthreshold/tests
    COV_PATH: src/openprocurement/tender/belowthreshold
    COV_FILE: .coveragerc

test_tender_openuadefense:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/openuadefense/tests
    COV_PATH: src/openprocurement/tender/openuadefense
    COV_FILE: .coveragerc

test_tender_cfaselectionua:
  extends: .test
  variables:
    TESTS_PATH: src/openprocurement/tender/cfaselectionua/tests
    COV_PATH: src/openprocurement/tender/cfaselectionua
    COV_FILE: .coveragerc

test_setup_py:
  image: python:2.7
  stage: test
  tags:
    - kube
  variables:
    GIT_STRATEGY: clone
  only:
    - branches
  dependencies:
    - build
  before_script:
    - apt-get update
    - apt-get install -y libsodium-dev
    - pip install --upgrade pip setuptools
    - echo '127.0.0.1  couchdb' >> /etc/hosts
  script:
    - python setup.py test
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  when: manual
