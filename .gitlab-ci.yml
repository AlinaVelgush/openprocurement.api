stages:
  - build
  - deploy
  - robot_tests
  - test

variables:
  COUCHDB_USER: op
  COUCHDB_PASSWORD: op
  GIT_STRATEGY: none

Build:
  stage: build
  script:
    - type multiwerf && source <(multiwerf use 1.0 beta)
    - type werf && source <(werf ci-env gitlab --tagging-strategy tag-or-branch --verbose)
    - unset WERF_TAG_GIT_BRANCH
    - werf build-and-publish --stages-storage :local --tag-custom ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  only:
    - branches
  tags:
    - shell
  except:
    - schedules
  variables:
    GIT_STRATEGY: fetch


.base_deploy: &base_deploy
  stage: deploy
  script:
    - helm repo add prozorro $REPO_URL
    - helm upgrade $CI_COMMIT_REF_SLUG --install prozorro/$HELM_CHART --namespace $HELM_NAMESPACE --set $HELM_TAG_PARAMETER=ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA --wait
  dependencies:
    - Build
  tags:
    - shell

Review:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
    on_stop: Stop review
  dependencies:
    - Build
  only:
    - branches
  except:
    - master
    - schedules

Deploy master:
  <<: *base_deploy
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    url: http://api.${CI_COMMIT_REF_SLUG}.${K8S_DOMAIN}/api/2.5/tenders
  dependencies:
    - Build
  only:
    - master
  except:
    - schedules

Run robot tests:
  stage: robot_tests
  script:
    - curl "$JENKINS_URL/buildWithParameters?token=$JENKINS_TOKEN&cause=$CI_COMMIT_REF_SLUG&RELEASE_NAME=$CI_COMMIT_REF_SLUG&API_VERSION=2.5"
    - echo $JENKINS_URL
  tags:
    - shell
  only:
    - branches
  dependencies:
    - Review
  except:
    - schedules
  when: manual

Stop review:
  stage: deploy
  script:
    - helm delete $CI_COMMIT_REF_SLUG --purge
  environment:
    name: review/${CI_COMMIT_REF_SLUG}
    action: stop
  tags:
    - shell
  only:
    - branches
  except:
    - master
    - schedules
  when: manual

.test:
  image: $CI_REGISTRY_IMAGE:ci-$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA
  stage: test
  services:
    - couchdb:1.6
  tags:
    - kube
  only:
    - branches
  dependencies:
    - Build
  script:
    - echo '127.0.0.1  couchdb' >> /etc/hosts
    - cd /app
    - export MODULE_DIR=$(echo $MODULE | sed -e 's/[\ ]/\//g')
    - export MODULE_NAME=$(echo $MODULE | sed -e 's/[\ ]/\./g')
    - py.test src/openprocurement/$MODULE_DIR --maxfail=1 --cov=openprocurement.$MODULE_NAME -v --color=yes
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'

.test_sandbox:
  extends: .test
  variables:
    SANDBOX_MODE: 'True'

.test_prod:
  extends: .test
  variables:
    SANDBOX_MODE: ''

test_sandbox_api:
  extends: .test_sandbox
  variables:
    MODULE: api

test_sandbox_tender_core:
  extends: .test_sandbox
  variables:
    MODULE: tender core

test_sandbox_contracting:
  extends: .test_sandbox
  variables:
    MODULE: contracting

test_sandbox_planning:
  extends: .test_sandbox
  variables:
    MODULE: planning

test_sandbox_tender_belowthreshold:
  extends: .test_sandbox
  variables:
    MODULE: tender belowthreshold

test_sandbox_tender_openua:
  extends: .test_sandbox
  variables:
    MODULE: tender openua

test_sandbox_tender_openeu:
  extends: .test_sandbox
  variables:
    MODULE: tender openeu

test_sandbox_tender_openuadefense:
  extends: .test_sandbox
  variables:
    MODULE: tender openuadefense

test_sandbox_tender_competitivedialogue:
  extends: .test_sandbox
  variables:
    MODULE: tender competitivedialogue

test_sandbox_tender_limited:
  extends: .test_sandbox
  variables:
    MODULE: tender limited

test_sandbox_tender_esco:
  extends: .test_sandbox
  variables:
    MODULE: tender esco

test_sandbox_tender_cfaua:
  extends: .test_sandbox
  variables:
    MODULE: tender cfaua

test_sandbox_tender_cfaselectionua:
  extends: .test_sandbox
  variables:
    MODULE: tender cfaselectionua

test_sandbox_agreement_core:
  extends: .test_sandbox
  variables:
    MODULE: agreement core

test_sandbox_agreement_cfaua:
  extends: .test_sandbox
  variables:
    MODULE: agreement cfaua

test_sandbox_historical:
  extends: .test_sandbox
  variables:
    MODULE: historical

test_prod_api:
  extends: .test_prod
  variables:
    MODULE: api

test_prod_tender_core:
  extends: .test_prod
  variables:
    MODULE: tender core

test_prod_contracting:
  extends: .test_prod
  variables:
    MODULE: contracting

test_prod_planning:
  extends: .test_prod
  variables:
    MODULE: planning

test_prod_tender_belowthreshold:
  extends: .test_prod
  variables:
    MODULE: tender belowthreshold

test_prod_tender_openua:
  extends: .test_prod
  variables:
    MODULE: tender openua

test_prod_tender_openeu:
  extends: .test_prod
  variables:
    MODULE: tender openeu

test_prod_tender_openuadefense:
  extends: .test_prod
  variables:
    MODULE: tender openuadefense

test_prod_tender_competitivedialogue:
  extends: .test_prod
  variables:
    MODULE: tender competitivedialogue

test_prod_tender_limited:
  extends: .test_prod
  variables:
    MODULE: tender limited

test_prod_tender_esco:
  extends: .test_prod
  variables:
    MODULE: tender esco

test_prod_tender_cfaua:
  extends: .test_prod
  variables:
    MODULE: tender cfaua

test_prod_tender_cfaselectionua:
  extends: .test_prod
  variables:
    MODULE: tender cfaselectionua

test_prod_agreement_core:
  extends: .test_prod
  variables:
    MODULE: agreement core

test_prod_agreement_cfaua:
  extends: .test_prod
  variables:
    MODULE: agreement cfaua

test_prod_historical:
  extends: .test_prod
  variables:
    MODULE: historical
